.main,
.combinations,
.combinations *,
.input,
.input .values
{
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
}
.input {
    flex-direction: column;
}
.input .values label {
    text-indent: 1rem;
}
.input label {
    width: 100%;
}
.input:not(:has(.size ._2:checked)) ~ .combinations .size_2,
.input:not(:has(.size ._3:checked)) ~ .combinations .size_3,
.input:not(:has(.size ._4:checked)) ~ .combinations .size_4,
.input:not(:has(.size ._5:checked)) ~ .combinations .size_5,
.input:not(:has(.size ._6:checked)) ~ .combinations .size_6,
.input:not(:has(.size ._7:checked)) ~ .combinations .size_7,
.input:has(.min-sum[data-val_gt~="3"]) ~ .combinations .sum_3,
.input:has(.min-sum[data-val_gt~="4"], .max-sum[data-val_lt~="4"]) ~ .combinations .sum_4,
.input:has(.min-sum[data-val_gt~="5"], .max-sum[data-val_lt~="5"]) ~ .combinations .sum_5,
.input:has(.min-sum[data-val_gt~="6"], .max-sum[data-val_lt~="6"]) ~ .combinations .sum_6,
.input:has(.min-sum[data-val_gt~="7"], .max-sum[data-val_lt~="7"]) ~ .combinations .sum_7,
.input:has(.min-sum[data-val_gt~="8"], .max-sum[data-val_lt~="8"]) ~ .combinations .sum_8,
.input:has(.min-sum[data-val_gt~="9"], .max-sum[data-val_lt~="9"]) ~ .combinations .sum_9,
.input:has(.min-sum[data-val_gt~="10"], .max-sum[data-val_lt~="10"]) ~ .combinations .sum_10,
.input:has(.min-sum[data-val_gt~="11"], .max-sum[data-val_lt~="11"]) ~ .combinations .sum_11,
.input:has(.min-sum[data-val_gt~="12"], .max-sum[data-val_lt~="12"]) ~ .combinations .sum_12,
.input:has(.min-sum[data-val_gt~="13"], .max-sum[data-val_lt~="13"]) ~ .combinations .sum_13,
.input:has(.min-sum[data-val_gt~="14"], .max-sum[data-val_lt~="14"]) ~ .combinations .sum_14,
.input:has(.min-sum[data-val_gt~="15"], .max-sum[data-val_lt~="15"]) ~ .combinations .sum_15,
.input:has(.min-sum[data-val_gt~="16"], .max-sum[data-val_lt~="16"]) ~ .combinations .sum_16,
.input:has(.min-sum[data-val_gt~="17"], .max-sum[data-val_lt~="17"]) ~ .combinations .sum_17,
.input:has(.min-sum[data-val_gt~="18"], .max-sum[data-val_lt~="18"]) ~ .combinations .sum_18,
.input:has(.min-sum[data-val_gt~="19"], .max-sum[data-val_lt~="19"]) ~ .combinations .sum_19,
.input:has(.min-sum[data-val_gt~="20"], .max-sum[data-val_lt~="20"]) ~ .combinations .sum_20,
.input:has(.min-sum[data-val_gt~="21"], .max-sum[data-val_lt~="21"]) ~ .combinations .sum_21,
.input:has(.min-sum[data-val_gt~="22"], .max-sum[data-val_lt~="22"]) ~ .combinations .sum_22,
.input:has(.min-sum[data-val_gt~="23"], .max-sum[data-val_lt~="23"]) ~ .combinations .sum_23,
.input:has(.min-sum[data-val_gt~="24"], .max-sum[data-val_lt~="24"]) ~ .combinations .sum_24,
.input:has(.min-sum[data-val_gt~="25"], .max-sum[data-val_lt~="25"]) ~ .combinations .sum_25,
.input:has(.min-sum[data-val_gt~="26"], .max-sum[data-val_lt~="26"]) ~ .combinations .sum_26,
.input:has(.min-sum[data-val_gt~="27"], .max-sum[data-val_lt~="27"]) ~ .combinations .sum_27,
.input:has(.min-sum[data-val_gt~="28"], .max-sum[data-val_lt~="28"]) ~ .combinations .sum_28,
.input:has(.min-sum[data-val_gt~="29"], .max-sum[data-val_lt~="29"]) ~ .combinations .sum_29,
.input:has(.min-sum[data-val_gt~="30"], .max-sum[data-val_lt~="30"]) ~ .combinations .sum_30,
.input:has(.min-sum[data-val_gt~="31"], .max-sum[data-val_lt~="31"]) ~ .combinations .sum_31,
.input:has(.min-sum[data-val_gt~="32"], .max-sum[data-val_lt~="32"]) ~ .combinations .sum_32,
.input:has(.min-sum[data-val_gt~="33"], .max-sum[data-val_lt~="33"]) ~ .combinations .sum_33,
.input:has(.min-sum[data-val_gt~="34"], .max-sum[data-val_lt~="34"]) ~ .combinations .sum_34,
.input:has(.min-sum[data-val_gt~="35"], .max-sum[data-val_lt~="35"]) ~ .combinations .sum_35,
.input:has(.min-sum[data-val_gt~="36"], .max-sum[data-val_lt~="36"]) ~ .combinations .sum_36,
.input:has(.min-sum[data-val_gt~="37"], .max-sum[data-val_lt~="37"]) ~ .combinations .sum_37,
.input:has(.min-sum[data-val_gt~="38"], .max-sum[data-val_lt~="38"]) ~ .combinations .sum_38,
.input:has(.min-sum[data-val_gt~="39"], .max-sum[data-val_lt~="39"]) ~ .combinations .sum_39,
.input:has(.min-sum[data-val_gt~="40"], .max-sum[data-val_lt~="40"]) ~ .combinations .sum_40,
.input:has(.min-sum[data-val_gt~="41"], .max-sum[data-val_lt~="41"]) ~ .combinations .sum_41,
.input:has(.max-sum[data-val_lt~="42"]) ~ .combinations .sum_42,
.input:has(.values .required ._1:checked) ~ .combinations .entry:not(._1),
.input:has(.values .required ._2:checked) ~ .combinations .entry:not(._2),
.input:has(.values .required ._3:checked) ~ .combinations .entry:not(._3),
.input:has(.values .required ._4:checked) ~ .combinations .entry:not(._4),
.input:has(.values .required ._5:checked) ~ .combinations .entry:not(._5),
.input:has(.values .required ._6:checked) ~ .combinations .entry:not(._6),
.input:has(.values .required ._7:checked) ~ .combinations .entry:not(._7),
.input:has(.values .required ._8:checked) ~ .combinations .entry:not(._8),
.input:has(.values .required ._9:checked) ~ .combinations .entry:not(._9),
.input:has(.values .forbidden ._1:checked) ~ .combinations ._1,
.input:has(.values .forbidden ._2:checked) ~ .combinations ._2,
.input:has(.values .forbidden ._3:checked) ~ .combinations ._3,
.input:has(.values .forbidden ._4:checked) ~ .combinations ._4,
.input:has(.values .forbidden ._5:checked) ~ .combinations ._5,
.input:has(.values .forbidden ._6:checked) ~ .combinations ._6,
.input:has(.values .forbidden ._7:checked) ~ .combinations ._7,
.input:has(.values .forbidden ._8:checked) ~ .combinations ._8,
.input:has(.values .forbidden ._9:checked) ~ .combinations ._9,
.input:has(.values .optional input:checked) ~ .combinations .entry
{
    display: none;
}
.input:has(.values .optional ._1:checked) ~ .combinations .entry._1,
.input:has(.values .optional ._2:checked) ~ .combinations .entry._2,
.input:has(.values .optional ._3:checked) ~ .combinations .entry._3,
.input:has(.values .optional ._4:checked) ~ .combinations .entry._4,
.input:has(.values .optional ._5:checked) ~ .combinations .entry._5,
.input:has(.values .optional ._6:checked) ~ .combinations .entry._6,
.input:has(.values .optional ._7:checked) ~ .combinations .entry._7,
.input:has(.values .optional ._8:checked) ~ .combinations .entry._8,
.input:has(.values .optional ._9:checked) ~ .combinations .entry._9
{
    display: inline;
}
